<div class="adminContainer blackCard">
   <header class="flex header">
        <div class="flex headerTitle purpleOpacity adminHeaderTitle">
           <a class="title adminTitle" href="/Admin/Index">
                ניהול
            </a>
        </div>
        <div class="flex headerTitle purple adminHeaderTitle">
            <a class="title adminTitle" href="/Admin/Statistics">
                סטטיסטיקות
            </a>
        </div>
    </header>
    <div class="flexColumn graphsContainer">
    <div class="flexColumn statisticsContainer">
        <h3>כמות הזמנות לפי חודשים</h3>
        <div id="month">
        </div>
    </div>
    <div class="flexColumn statisticsContainer">
        <h3>כמות הזמנות לפי מועדונים</h3>
        <div id="club">
        </div>
    </div>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
        <script src="https://d3js.org/d3.v3.min.js" charset="utf-8"></script>

<script type='text/javascript'> 
    var monthlySales = @Html.Raw(Json.Encode(ViewBag.MonthlySales));
    var clubOrders =  @Html.Raw(Json.Encode(ViewBag.ClubOrders));

    createGraph(clubOrders, false, 'club');
    createGraph(monthlySales, true, 'month');

    function createGraph(data, isMonth, id) {
        var margin = { top: 40, right: 40, bottom: 170, left: 40 },
                width = 1000,
                height = 300;

            //set the ranges
            var x = d3.scale.ordinal().rangeRoundBands([0, width], 0.5);
            var y = d3.scale.linear().range([height, 0, 1]);
            var maxY = d3.max(data, function (d) { return d.AmountOfOrders; });
            var xAxis = d3.svg.axis()
                .scale(x)
                .orient("bottom");

            var yAxis = d3.svg.axis()
                .scale(y)
                .orient("left")
                .tickValues(data.map(entry => entry.AmountOfOrders))
                

            // add the SVG element
            var svg = d3.select("#" + id).append("svg")
                .attr("fill", "white")
                .attr("width", width + margin.left + margin.right)
                .attr("height", 400)
                .append("g")
                .attr("transform",
                    "translate(" + margin.left + "," + margin.top + ")");


            // scale the range of the data
            if(isMonth) {
                var sortedData = data.sort((x,y) => x.Month - y.Month);
                x.domain(sortedData.map(function (d) { return d.Month; }));
                y.domain([0, d3.max(sortedData, function (d) { return d.AmountOfOrders; })]);
            } else {
                 x.domain(data.map(function (d) { return d.Club; }));
                y.domain([0, d3.max(data, function (d) { return d.AmountOfOrders; })]);
            }

            // add axis
            svg.append("g")
                .attr("transform", "translate(0," + height + ")")
                .call(xAxis)
                .selectAll("text")
                .attr("dx", isMonth ? "0.8em" : "0")
                .attr("dy", "1em")

            svg.append("g")
                .call(yAxis)
                .append("text")
                .style("margin-right", "5px")

            svg.selectAll("text")
                    .attr("transform", "translate(-30,0)")
                    .style("text-anchor", "end")
                    .style("font-size", 20)
                    .style("fill", "#8E11C3");
            
            svg.append("text")
                .attr("class", "x label")
                .attr("text-anchor", "end")
                .attr("x", width)
                .attr("y", height + 25)
                .style("font-size", "12px")
                .text(isMonth ? "חודשים" : "מועדונים");

            svg.append("text")
                .attr("class", "y label")
                .attr("text-anchor", "end")
                .attr("y", -20)
                .attr("x", -40)
                .style("font-size", "14px")
                .text("כמות הזמנות");
            // Add bar chart
            if(isMonth) {
                svg.selectAll()
                    .data(data)
                    .enter()
                    .append("rect")
                    .attr("class", "bar")
                    .attr("width", x.rangeBand() / 2)
                    .attr("x", function (d) { return x(d.Month); })
                    .attr("y", function (d) { return y(d.AmountOfOrders); })
                    .attr("height", function (d) { return height - y(d.AmountOfOrders); });
            } else {
                svg.selectAll()
                    .data(data)
                    .enter()
                    .append("rect")
                    .attr("class", "bar")
                    .attr("width", x.rangeBand())
                    .attr("x", function (d) { return x(d.Club); })
                    .attr("y", function (d) { return y(d.AmountOfOrders); })
                    .attr("height", function (d) { return height - y(d.AmountOfOrders); });
            }
        
    }
</script>