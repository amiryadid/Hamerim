.contenct {
    padding: 20px;
    flex-wrap: wrap;
    justify-content: space-around;
    height: 91%;
    overflow-y: auto;
}

.card {
    background-color: rgba(107, 107, 107, 0.35);
    color: white;
    padding: 15px;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    flex-basis: 48%;
}
/*
.card:not(:last-child) {
    margin-bottom: 2rem;
}*/

.card form {
    display: flex;
    align-items: center;
    width: 100%;
}

.card-body {
    display: flex;
    flex-direction: column;
}

.card-title {
    font-size: 24px;
    margin: 0;
    letter-spacing: 1px;
}

.card-subtitle {
    font-size: 18px;
    margin: 0;
}

.card-footer {
    font-size: 16px;
    margin: 0;
    color: #c4c4c4;
}

#choose-club-btn {
    color: var(--pink);
    background-color: white;
    filter: drop-shadow(0px 0px 10px rgba(0, 0, 0, 0.8));
    border-radius: 50%;
    width: 90px;
    height: 90px;
    margin-right: auto;
    font-weight: bolder;
    font-size: large;
    transition: all 0.2s ease;
}

#choose-club-btn:hover {
    background-color: #e62248;
    color: white;
}

.flex-row {
    flex-direction: row;
    justify-content: space-between;
}

.flex-column {
    flex-direction: column;
    justify-content: space-between;
}

.flex.center {
    justify-content: center;
}

.flex-row .right {
    width: 43%;
}

.details-card-row .card {
    justify-content: center;
    flex-basis: 80%;
}

.client-details {
    font-size: 18px;
}

.client-details .flex-row {
    margin-bottom: 6px;
}

.client-details span {
    margin-left: 2em;
}

.client-details input {
    background-color: #000000a8;
    outline: none;
    border: 0;
}

.client-details input:-webkit-autofill,
.client-details input:-webkit-autofill:hover,
.client-details input:-webkit-autofill:focus {
    border: 0;
    -webkit-text-fill-color: white;
    -webkit-box-shadow: 0;
    transition: background-color 5000s ease-in-out 0s;
}

.client-details p {
    font-size: 14px;
    text-align: center;
    margin: 0;
}

.blackCard ul {
    font-size: 18px;
    padding: 0px;
}

.blackCard ul dt {
    margin-bottom: 7px;
}

.service-item .service-item-label {
    width: 47%;
    margin-right: 7px;
}

.services-list {
    height: 256.76px;
}

.order-sum {
    align-items: center;
}

.order-sum .blackCard {
    margin: 0;
}

.order-sum .headerLeft {
    height: 100%;
    margin: auto;
    font-size: 22px;
}

.order-sum .mini-text {
    font-size: 0.7em;
}

.order-sum .leftSide {
    align-items: center;
}

#done-btn {
    border: 0;
    background-color: var(--pink);
    width: 44%;
    font-size: 20px;
    height: initial;
    transition: all 0.1s ease;
}

#done-btn:disabled {
    opacity: 0.3;
}

#finishedOrder .flex-row-lg {
    justify-content: space-evenly;
    margin-bottom: 2em;
}

#finishedOrder .card {
    flex-basis: 43%;
}

/* Checkbox component */
/* Customize the label (the container) */
.container {
    position: relative;
    cursor: pointer;
    user-select: none;
    display: flex;
    padding-right: 30px;
    font-size: 18px;
    font-weight: normal;
    width: 100%;
    display: flex;
    align-items: center;
}

/* Hide the browser's default checkbox */
.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

/* Create a custom checkbox */
.checkmark {
    position: absolute;
    top: 2px;
    right: 0;
    height: 20px;
    width: 20px;
    border-radius: 50%;
    background-color: black;
    border: white solid 1px;
    transition: all 0.1s ease;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
    background-color: #111111;
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
    background-color: var(--purple);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
    display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
    left: 7px;
    top: 3px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0px 2px 2px 0;
    transform: rotate(45deg);
    transition: all 0.1s ease;
}

/* Switch component */

.switch-container {
    display: flex;
    color: white;
    font-size: 16px;
}

.switch-text {
    margin: auto;
    font-weight: normal;
}

.switch {
    position: relative;
    display: inline-block;
    width: 40px;
    height: 20px;
    margin: auto 0.8rem auto 0.8rem;
}

.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #cecece00;
    border: white 1px solid;
    -webkit-transition: .4s;
    transition: .4s;
}

.slider:before {
    position: absolute;
    content: "";
    height: 13px;
    width: 13px;
    left: 3px;
    bottom: 3px;
    background-color: white;
    -webkit-transition: .4s;
    transition: .4s;
}

input:checked + .slider {
    background-color: var(--purple);
}

input:focus + .slider {
    box-shadow: 0 0 1px var(--purple);
}

input:checked + .slider:before {
    transform: translateX(20px);
}

.slider.round {
    border-radius: 20px;
}

.slider.round:before {
    border-radius: 50%;
}

/* Datepicker component */

.ui-datepicker {
    background: #000000b8;
    border: 0 !important;
}

.ui-datepicker-header {
    background: rgb(255, 255, 255, 12%);
    color: white;
    font-weight: normal;
    border: 0;
}

.ui-datepicker-header a:hover {
    background: transparent;
    border: 0;
}

.ui-datepicker-header a :hover {
    background: transparent;
    border: 0;
}

.ui-state-default {
    border: 0 !important;
    text-align: center !important;
    transition: all 0.2s ease;
}

.ui-state-default:hover {
    background: #ec4d6c !important;
    color: white !important;
}

.occupied {
    opacity: 1 !important;
}

.occupied span {
    background: rgb(255, 255, 255, 12%) !important;
}

.ui-datepicker .ui-state-active {
    background: var(--pink) !important;
}
